/* NAVIGATION */

#navbar {
  padding: 0;
}

#navbar ul.nav-items {
  display: none;
}

.logo {
  font-size: 1.2rem;
  margin-left: 2rem; 
}

.overlay-wrap {
  display: block;
  /* position: fixed;
  top: 0;
  right: 0;
  z-index: 1; */
}

/* we are using the checkbox to make use of its state functionality that we can grab onto with css instead of having to use js */

.overlay-wrap .toggler {
  position: absolute;
  top: 0.4rem;
  right: 1.8rem;
  /* checkbox will be on top but invisible */
  z-index: 2;
  cursor: pointer;
  width: 50px;
  height: 50px;
  /* make the checkbox invisible */
  opacity: 0;
}

/* hamburger wrapper */
.overlay-wrap .hamburger {
  position: absolute;
  top: 0;
  right: 1.5rem;
  /* right: 1.5rem; */
  /* postion hamburger under the checkbox */
  z-index: 1;
  width: 60px;
  height: 60px;
  padding: 1rem;
  /* background: var(--primary-color); */
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Hamburger Line */
.overlay-wrap .hamburger > div {
  /* position this so top and bottom lines can be positioned absolutely with respect */
  position: relative;
  /* This is equivalent to flex: 0 0 auto. It sizes the item according to its width/height properties, but makes it fully inflexible. This is similar to flex: initial except it is not allowed to shrink, even in an overflow situation. */
  flex: none;
  width: 100%;
  /* background: #000;
  height: 2px; */
  display: flex;
  align-items: center;
  justify-content: center;
  /* animate hamburger line rotation */
  transition: all 0.4s ease;
}

/* Hamburger Lines - Top & Bottom */
.overlay-wrap .hamburger > div::before,
.overlay-wrap .hamburger > div::after {
  content: "";
  position: absolute;
  z-index: 1;
  top: -10px;
  width: 100%;
  height: 1px;
  background: #000;
}

/* moves ::after line down to become bottom line */
.overlay-wrap .hamburger > div::after {
  top: 10px;
}

/* Toggler Animation */
/* keep  */
/* .overlay-wrap .toggler:checked,
.overlay-wrap .toggler:checked + .hamburger,
.overlay-wrap .toggler:checked ~ .menu {
  margin-right: 1rem;
} */


/* target the div which is the direct child (>) of the div.hamburger which is the adjacent sibling (immediately following) (+) of an input with the .toggler class that has a pseudo-class of checked and is a descendant of the div.overlay-wrap*/
.overlay-wrap .toggler:checked + .hamburger > div {
  transform: rotate(135deg);
  /* show center line for X */
  background: #000;
  height: 1px;
}

/* Turns Lines Into X */
.overlay-wrap .toggler:checked + .hamburger > div:before,
.overlay-wrap .toggler:checked + .hamburger > div:after {
  top: 0;
  transform: rotate(90deg);
}

/* Rotate On Hover When Checked */
.overlay-wrap .toggler:checked:hover + .hamburger > div {
  transform: rotate(225deg);
}



/* HIDE MENU */

/* Initially menu is hidden */
.overlay-wrap .menu {
  position: fixed;
  top: 132px;
  left: 0;
  width: 100%;
  height: 100%;
  visibility: hidden;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

.overlay-wrap .menu > div {
  position: absolute;
  background: #fff;
  top: 0;
  height: 100vh;
  width: 100vw;
  display: flex;
  flex: none;
  align-items: center;
  justify-content: center;
  
  transition: all 0.4s ease;
  color: #000;
}

.overlay-wrap .menu > div > div {
  text-align: center;
  max-width: 90vw;
  max-height: 100vh;
  opacity: 0;
  transition: opacity 0.4s ease, transform 0.4s ease; 
}

/* SHOW MENU WHEN TOGGLER IS CHECKED */
/* The general sibling selector (~) selects all elements that are siblings of a specified element. */
.overlay-wrap .toggler:checked ~ .menu {
  visibility: visible;
  
}

.overlay-wrap .toggler:checked ~ .menu > div {
  transition-duration: var(--menu-speed);
}

.overlay-wrap .toggler:checked ~ .menu > div > div {
  opacity: 1;
  transform: translateY(-150px);
  
}

/* MENU STYLES */

.overlay-wrap .menu > div > div > ul > li {
  list-style: none;
  color: #000;
  font-size: 2.5rem;
  padding: 0.5rem;
}

.overlay-wrap .menu > div > div > ul > li > a {
  color: inherit;
  text-decoration: none;
  transition: color 0.4s ease;
}

.overlay-wrap .menu > div > div > ul > li > a:hover {
  color: var(--secondary-color);
}

h1 {
  font-size: 1.8rem;
}

h2 {
  font-size: 1rem;
}


.grid {
  display: block;
}

.grid-item {
  margin: 2rem;
  width: calc(100% - 4rem);
}

.work #showcase img {
  margin-bottom:  .25rem;
}

/* override AOS animation style */
[data-aos=fade-up]{transform:translate3d(0,25px,0)}

#contact #showcase h1 {
  font-size: 2.1rem;
}

#contact #showcase p {
  padding: 0 2rem;
  line-height: 1.9;
  font-size: 0.8rem;
}

#contact #showcase a:not(:last-child) {
  font-size: 0.8rem;
}